# Copyright (c) 2023, 2024, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v1.0 as shown at https://oss.oracle.com/licenses/upl.

global:
  # -- Kubernetes Namespace for creating monitoring resources.
  # Ignored if oci-kubernetes-monitoring-common.createNamespace set to false.
  namespace: oci-onm
  # -- Resource names prefix used, where allowed.
  resourceNamePrefix: oci-onm

oci-onm-common:
# -- Automatically create, a readonly cluster role, cluster role binding and
# serviceaccount is required # to read various cluster objects for monitoring.
# If set to false serviceaccount value must be provided in the parent chart.
# Refer, README for the cluster role definition and other details.
  createServiceAccount: true

  # -- Automatically create namespace for all resources (namespaced) used by OCI Kubernetes Monitoring Solution.
  createNamespace: true

  # -- Kubernetes Namespace for creating serviceaccount. Default: oci-onm
  namespace: "{{ .Values.global.namespace }}"

  # -- Resoure Name Prefix: Wherever allowed, this prefix will be used with all resources used by this chart
  resourceNamePrefix: "{{ .Values.global.resourceNamePrefix }}"

  # -- Kubernetes ServiceAccount name
  serviceAccount: "{{ .Values.global.resourceNamePrefix }}"

# -- Container runtime for Kubernetes Cluster. Requires fluentd configuration changes accordingly
# Allowed values: docker, cri(for OKE 1.20 and above)
runtime: cri

# -- Authentication type for authenticating with OCI Logging Analytics service
# -- Allowed values: InstancePrincipal, config
authtype: InstancePrincipal

# This parameter is required only for realms where the OCI Ruby SDK is not supported.
# Format: <oci-region>.oci.<oci_domain>
# Example: us-ashburn-1.oci.oraclecloud.com
ociDomain:

# -- Kubernetes Namespace for deploying monitoring resources deployed by this chart.
namespace: "{{ .Values.global.namespace }}"

# -- Resoure Name Prefix: Wherever allowed, this prefix will be used with all resources used by this chart
resourceNamePrefix: "{{ .Values.global.resourceNamePrefix }}"

# --  Kubernetes ServiceAccount
serviceAccount: "{{ .Values.global.resourceNamePrefix }}"

image:
   # Image pull secrets for. Secret must be in the namespace defined by namespace
   imagePullSecrets:
   # -- Replace this value with actual docker image url
   url: container-registry.oracle.com/oci_observability_management/oci-la-fluentd-collector:1.5.2
   # -- Image pull policy
   imagePullPolicy: Always

# -- Logging Analytics namespace. Can be found in OCI console --> Logging Analytics --> Administration --> Service
ociLANamespace:

# -- OCID of Logging Analytics Log Group to send logs to.
# Can be overridden for individual log types.
# e.g. ocid1.loganalyticsloggroup.oc1.phx.amaaaaasdfaskriauucc55rlwlxe4ahe2vfmtuoqa6qsgu7mb6jugxacsk6a
ociLALogGroupID:

# -- OKE Cluster OCID/EKS Cluster ARN etc.
# e.g. ocid1.cluster.oc1.phx.aaaaaaaahhbadf3rxa62faaeixanvr7vftmkg6hupycbf4qszctf2wbmqqxq
kubernetesClusterID:

# -- Kubernetes Cluster name. Need not be the OKE Cluster display name.
# e.g. production-cluster
kubernetesClusterName:

# -- Kubernetes Cluster Entity OCID.
# e.g. ocid1.loganalyticsentity.oc1.phx.amaaaaaabulluiqabqeq4delvhdlmd7aqcjrdla57n2szsxyz7pfdvnhwuua
ociLAClusterEntityID:

# -- Kubernetes Security Context privileged flag
# Default: 'false'. This is not a required for OKE clusters.
# In Kubernetes environments where SELinux mode is enforced, set this flag to 'true' to allow fluentd pods to access log files.
privileged: false

# -- Enables collection of AWS EKS Control Plane logs through CloudWatch or S3 Fluentd plugin
enableEKSControlPlaneLogs: false

# Logging Analytics additional metadata. Use this to tag all the collected logs with one or more key:value pairs.
# Key must be a valid field in Logging Analytics
#metadata:
   #"Client Host Region": "PCT"
   #"Environment": "Production"
   #"Third key": "Third Value"

# @param extra environment variables. Example
#   name: ENV_VARIABLE_NAME
#   value: ENV_VARIABLE_VALUE
extraEnv: []

# Requests and limits for Memory and CPU
resources:
   # -- Limits
   limits:
      memory: 500Mi
   # -- Resource requests
   requests:
      cpu: 100m
      memory: 250Mi

# -- @param extraVolumes Extra volumes.
# Example:
#   - name: tmpDir
#     hostPath:
#         path: /tmp log
extraVolumes: []

# -- @param extraVolumeMounts Mount extra volume(s). Example:
#   - name: tmpDir
#     mountPath: /tmp
extraVolumeMounts: []

# -- Log logvolumes for pod logs and container logs
volumes:
   # -- Path to the pod logs on Kubernetes Nodes
   podsHostPath: /var/log/pods
   # -- Path to the container data logs on Kubernetes Nodes
   containerdataHostPath: /u01/data/docker/containers

## -- OCI API Key Based authentication details. Required when authtype set to config
oci:
   # -- Path to the OCI API config file
   path: /var/opt/.oci
   # -- Config file name
   file: config
   configFiles:
      # -- config file [data](https://docs.oracle.com/en-us/iaas/Content/API/Concepts/sdkconfig.htm)
      # Replace each of the below fields with actual values.
      #   [DEFAULT]
      #   user=<user ocid>
      #   fingerprint=<fingerprint>
      #   key_file=<key file path>
      #   tenancy=<tenancy ocid>
      #   region=<region>
      config: |-
         # Replace each of the below fields with actual values.
         [DEFAULT]
         user=<user ocid>
         fingerprint=<fingerprint>
         key_file=<key file path>
         tenancy=<tenancy ocid>
         region=<region>
      # -- Private key file data
      #   -----BEGIN RSA PRIVATE KEY-----
      #   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      #   -----END RSA PRIVATE KEY-----
      private.pem: |-

# -- Collection frequency (in minutes) for Kubernetes Objects
objectsPollingFrequency: 5m

# Fluentd configuration.
fluentd:
   # -- Path to the fluentd config file
   path: /var/opt/conf
   # -- Fluentd config file name
   file: fluent.conf
   # -- Base directory on the node (with read write permission) for storing fluentd plugins related data.
   baseDir: /var/log
   # -- To enable MultiProcessWorkers, set this to (> 0) the number of required workers. Defaults to 0.
   # -- Set corresponding workerId using worker field against each source/log. When enabled MultiProcessWorkers, the default worker would be 0 until unless set for each source/log.
   multiProcessWorkers: 0
   # -- To set timezone override for all logs collected using this solution (applies only to log records without explicit timezone identifier in the record itself)
   timezone:

   # Configuration for oci-logging-analytics fluentd output plugin
   ociLoggingAnalyticsOutputPlugin:
      # -- OCI API Key profile to use, if multiple profiles are found in the OCI API config file.
      profile_name: 'DEFAULT'
      # -- Output plugin logging level: DEBUG < INFO < WARN < ERROR < FATAL < UNKNOWN
      plugin_log_level: 'info'
      # -- The maximum log file size at which point the log file to be rotated, for example, 1KB, 1MB, etc.
      plugin_log_file_size: '10MB'
      # -- The number of archived or rotated log files to keep, must be non-zero.
      plugin_log_file_count: 10
      # -- Fluentd Buffer Configuration
      buffer:
         # Max number of threads to flush or write chunks in parallel.
         flush_thread_count: 1
         # Max stored buffer size.
         # all append operations will fail with error, and data will be lost after total size of the stored buffer reaches this limit.
         total_limit_size: '5368709120' # 5GB
         # Frequency of flushing the chunks to output plugin.
         flush_interval: 30 # seconds
         # Flush thread interval
         flush_thread_interval: 0.5 # seconds
         # Flush thread burst interval
         flush_thread_burst_interval: 0.05 # seconds
         # Wait in seconds before the next retry to flush.
         retry_wait: 2 # seconds
         # Max number of time to retry. Mandatory when retry_forever set to false.
         retry_max_times: 17
         # Wait in seconds before the next constant factor of exponential backoff.
         retry_exponential_backoff_base: 2
         # If true, plugin will ignore retry_max_times option and retry flushing forever.
         retry_forever: true
         # Disable chunk backup
         disable_chunk_backup: true

   # Configuration for kubernetes_metadata filter [plugin](https://github.com/fabric8io/fluent-plugin-kubernetes_metadata_filter)
   kubernetesMetadataFilter:
      # -- Kubernetes API server URL.
      # Alternatively, environment variables KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT can be used
      # Environment variable are given preference.
      kubernetes_url:
      # -- Validate SSL certificates
      verify_ssl: true
      # -- Path to CA file for Kubernetes server certificate validation
      ca_file:
      # -- Skip all label fields from the metadata.
      skip_labels: false
      # -- Skip the container fields container_image and container_image_id in the metadata.
      skip_container_metadata: false
      # -- Skip the master_url field from the metadata.
      skip_master_url: false
      # -- Skip the namespace_id field from the metadata. The fetch_namespace_metadata function will be skipped. The plugin will be faster and cpu consumption will be less.
      skip_namespace_metadata: false
      # -- Set up a watch on the pods on the API server for updates to metadata. By default, true.
      watch: true
   # -- Config for Logs Collection using fluentd tail plugin
   tailPlugin:
      # If true, starts to read the logs from the head of the file or the last read position recorded in pos_file
      readFromHead: true
      # frequency of flushing the chunks to output plugin.
      flushInterval: 60 # seconds
      # Specifies the encoding of logs. By default, in_tail emits string value as ASCII-8BIT encoding. If encoding is specified, in_tail changes string to given encoding.
      # When encoding is set at this level, it gets applied to all the logs being collected. Instead, it can also be set at individual logs under sections like kubernetesSystem, genericContainerLogs, customLogs etc.
      # encoding:

   # Configuration for rewrite_tag plugin
   rewriteTagPlugin:
      hostname_command: "cat /etc/hostname"

   # Configuration for Kubernetes System specific logs like Kube Flannel, Kube Proxy etc.
   kubernetesSystem:
      # Setting the following properties will override the default/generic configuration and applies to all Kubernetes system logs
      #ociLALogGroupID:
      #metadata:
         #"Client Host Region": "America"
         #"Environment": "Production"
         #"Third Key": "Third Value"
      #encoding:
      # Worker number in case of multi process workers enabled. If not set when multi process workers enabled, then it defaults to 0.
      #worker:
      # -- To set timezone override for all kubernetesSystem logs (applies only to log records without explicit timezone identifier in the record itself)
      #timezone:

      logs:
         # -- Kube Proxy logs collection configuration
         kube-proxy:
            # kube-proxy Log file location.
            path: /var/log/containers/kube-proxy-*.log
            # Logging Analytics log source to use for parsing and processing Kubernetes Proxy Logs.
            ociLALogSourceName: "Kubernetes Proxy Logs"
            # Regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/
            #metadata:
               #"Client Host Region": "America"
               #"Environment": "Production"
               #"Third Key": "Third Value"
            #ociLALogGroupID:
            #encoding:
            # Worker number in case of multi process workers enabled. If not set when multi process workers enabled, then it defaults to 0.
            #worker:
            # -- To set timezone override for kube-proxy logs (applies only to log records without explicit timezone identifier in the record itself)
            #timezone:

         # -- Kube Flannel logs collection configuration
         kube-flannel:
            # kube-flannel log files location.
            path: /var/log/containers/kube-flannel-*.log
            # Logging Analytics log source to use for parsing and processing Kubernetes Flannel Logs.
            ociLALogSourceName: "Kubernetes Flannel Logs"
            # The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/

         # -- Kubernetes DNS Autoscaler Logs collection configuration
         kube-dns-autoscaler:
            path: /var/log/containers/kube-dns-autoscaler-*.log
            # Logging Analytics log source to use for parsing and processing  Kubernetes DNS Autoscaler Logs.
            ociLALogSourceName: "Kubernetes DNS Autoscaler Logs"
            # The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/

         # -- Kubernetes Core DNS Logs collection configuration
         coredns:
            # coredns log files location.
            path: /var/log/containers/coredns-*.log
            # Logging Analytics log source to use for parsing and processing Kubernetes Core DNS Logs.
            ociLALogSourceName: "Kubernetes Core DNS Logs"
            # Regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^\[[^\]]+\]\s+/

         # -- Kubernetes CSI Node Driver Logs collection configuration
         csinode:
            # csinode log files location.
            path: /var/log/containers/csi-oci-node-*.log,/var/log/containers/ebs-csi-node-*.log
            # Logging Analytics log source to use for parsing and processing Kubernetes CSI Node Driver Logs.
            ociLALogSourceName: "Kubernetes CSI Node Driver Logs"

         # -- Proxymux Client Logs collection configuration
         proxymux:
            # proxymux log files location..
            path: /var/log/containers/proxymux-client-*.log
            # Logging Analytics log source to use for parsing and processing OKE Proxymux Client Logs.
            ociLALogSourceName: "OKE Proxymux Client Logs"

         # -- Kubernetes Autoscaler Logs collection configuration
         cluster-autoscaler:
            # cluster autoscalar log files location.
            path: /var/log/containers/cluster-autoscaler-*.log
            # Logging Analytics log source to use for parsing and processing Kubernetes Autoscaler Logs.
            ociLALogSourceName: "Kubernetes Autoscaler Logs"
            #  The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/

         # -- Kubernetes CSI Controller Logs collection configuration
         csi-controller:
            # csi controller log files location.
            path: /var/log/containers/ebs-csi-controller-*.log
            # Logging Analytics log source to use for parsing and processing Kubernetes CSI Controller Logs.
            ociLALogSourceName: "Kubernetes CSI Controller Logs"

         # Config specific to API Server Logs Collection
         kube-apiserver:
            # The path to the source files.
            path: /var/log/containers/kube-apiserver-*.log
            # Logging Analytics log source to use for parsing and processing the logs: Kubernetes API Server Logs.
            ociLALogSourceName: "Kubernetes API Server Logs"
            # The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/

         # Config specific to etcd Logs Collection
         etcd:
            # The path to the source files.
            path: /var/log/containers/etcd-*.log
            # Logging Analytics log source to use for parsing and processing the logs: Kubernetes etcd Logs.
            ociLALogSourceName: "Kubernetes etcd Logs"

         # Config specific to kube-controller-manager Logs Collection
         kube-controller-manager:
            # The path to the source files.
            path: /var/log/containers/kube-controller-manager-*.log
            # Logging Analytics log source to use for parsing and processing the logs: Kubernetes Controller Manager Logs.
            ociLALogSourceName: "Kubernetes Controller Manager Logs"
            # The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/

         # Config specific to kube-scheduler Logs Collection
         kube-scheduler:
            # The path to the source files.
            path: /var/log/containers/kube-scheduler-*.log
            # Logging Analytics log source to use for parsing and processing the logs: Kubernetes Scheduler Logs.
            ociLALogSourceName: "Kubernetes Scheduler Logs"
            # The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/

         # Config specific to Kubernetes Audit Logs Collection
         kube-audit:
            # The path to the source files.
            path: /var/log/kubernetes/audit/audit*
            # Logging Analytics log source to use for parsing and processing the logs: Kubernetes Audit Logs.
            ociLALogSourceName: "Kubernetes Audit Logs"

   # Configuration for Linux System specific logs like CronLogs and SecureLogs
   linuxSystem:
      # Setting the following properties will override the default/generic configuration and applies to all Kubernetes system logs
      #ociLALogGroupID:
      #metadata:
         #"Client Host Region": "America"
         #"Environment": "Production"
         #"Third Key": "Third Value"
      #encoding:
      # Worker number in case of multi process workers enabled. If not set when multi process workers enabled, then it defaults to 0.
      #worker:
      # -- To set timezone override for all linuxSystem logs (applies only to log records without explicit timezone identifier in the record itself)
      #timezone:

      logs:
         # -- Linux CRON logs collection configuration
         cronlog:
            #  cron log file path
            path: /var/log/cron*
            #  Logging Analytics log source to use for parsing and processing Linux Cron Logs.
            ociLALogSourceName: "Linux Cron Logs"
            #  The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^(?:(?:\d+\s+)?<([^>]*)>(?:\d+\s+)?)?\S+\s+\d{1,2}\s+\d{1,2}:\d{1,2}:\d{1,2}\s+/
            # -- To set timezone override for cronlog (applies only to log records without explicit timezone identifier in the record itself)
            #timezone:

         # -- Linux CRON logs collection configuration
         securelog:
            # linux secure logs file path
            path: /var/log/secure*
            # Logging Analytics log source to use for parsing and processing Linux Secure Logs.
            ociLALogSourceName: "Linux Secure Logs"
            #  The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^(?:(?:\d+\s+)?<([^>]*)>(?:\d+\s+)?)?\S+\s+\d{1,2}\s+\d{1,2}:\d{1,2}:\d{1,2}\s+/

         # -- kubelet logs collection configuration
         kubeletlog:
            # Logging Analytics log source to use for parsing and processing Kubernetes Kubelet Logs.
            ociLALogSourceName: "Kubernetes Kubelet Logs"

         # -- Linux syslog  collection configuration
         syslog:
            # syslog file path
            path: /var/log/messages*
            # Logging Analytics log source to use for parsing and processing Linux Syslog Logs.
            ociLALogSourceName: "Linux Syslog Logs"
            #  The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^(?:(?:\d+\s+)?<([^>]*)>(?:\d+\s+)?)?\S+\s+\d{1,2}\s+\d{1,2}:\d{1,2}:\d{1,2}\s+/

         # -- Linux maillog collection configuration
         maillog:
            #  maillog file path
            path: /var/log/maillog*
            #  Logging Analytics log source to use for parsing and processing Linux Mail Delivery Logs.
            ociLALogSourceName: "Linux Mail Delivery Logs"
            #  The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^(?:(?:\d+\s+)?<([^>]*)>(?:\d+\s+)?)?\S+\s+\d{1,2}\s+\d{1,2}:\d{1,2}:\d{1,2}\s+/

         # -- Linux audit logs collection configuration
         linuxauditlog:
            #  audit log file path
            path: /var/log/audit/audit*
            #  Logging Analytics log source to use for parsing and processing Linux Audit Logs.
            ociLALogSourceName: "Linux Audit Logs"

         # -- Linux uptrack logs collection configuration
         uptracklog:
            #  uptrack log files path.
            path: /var/log/uptrack*
            #  Logging Analytics log source to use for parsing and processing ksplice Logs.
            ociLALogSourceName: "Ksplice Logs"
            #  The regular expression pattern for the starting line in case of multi-line logs.
            multilineStartRegExp: /^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}/

         # -- Linux yum logs collection configuration
         yum:
            # yum log files path
            path: /var/log/yum.log*
            # Logging Analytics log source to use for parsing and processing Linux YUM Logs.
            ociLALogSourceName: "Linux YUM Logs"

   # Configuration for AWS EKS Control Plane logs like API Server, Audit, Authenticator etc.
   eksControlPlane:
      # Collection Type (cloudwatch or s3)
      collectionType: "cloudwatch"
      # AWS region
      region:
      # Use AssumeRoleCredentials (https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/AssumeRoleCredentials.html) to authenticate
      # Default is true. Set to false to use access keys
      awsUseSts: true
      # The role ARN to assume when using AWS Security Token Service authentication
      awsStsRoleArn:
      # AWS access key and secret access key, needed only when awsUseSts is explicitly set to false
      #awsKeyId:
      #awsSecKey:
      # CloudWatch Log Group name of the EKS cluster. Automatically determined by extracting cluster name from kubernetesClusterId and
      # following naming syntax as "aws/eks/<cluster name>/cluster". Below field can be used to override this behavior.
      #cwLogGroupName:
      # S3 related settings
      # S3 bucket name to which EKS Control Plane logs are being streamed using a subscription filter
      s3Bucket:
      ociLALogGroupID:
      #metadata:
         #"Client Host Region": "America"
         #"Environment": "Production"
         #"Third Key": "Third Value"
      # Worker number in case of multi process workers enabled. If not set when multi process workers enabled, then it defaults to 0.
      #worker:
      # -- To set timezone override for all eksControlPlane logs (applies only to log records without explicit timezone identifier in the record itself)
      #timezone:

      logs:
         # If using cloudwatch collection mechanism, apiserver and audit logs need to be part of the same worker as they share the same log stream name prefix.
         # Thus "worker" variable is only picked up from "apiserver" section.
         apiserver:
            # CloudWatch Log Stream name
            cwLogStreamName: "kube-apiserver"
            # SQS queue name which is notified when apiserver log object is created in S3 bucket
            sqsQueue: "apiserver"
            # S3 object key
            objectKey: .*?kube-apiserver/
            # Logging Analytics log source to use for parsing and processing EKS Control Plane API Server Logs.
            ociLALogSourceName: "Kubernetes API Server Logs"
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/
            #metadata:
               #"Client Host Region": "America"
               #"Environment": "Production"
               #"Third Key": "Third Value"
            #ociLALogGroupID:
            # Worker number in case of multi process workers enabled. If not set when multi process workers enabled, then it defaults to 0.
            #worker:
            # -- To set timezone override for apiserver logs (applies only to log records without explicit timezone identifier in the record itself)
            #timezone:

         audit:
            sqsQueue: "audit"
            # S3 object key
            objectKey: .*?kube-apiserver-audit
            # Logging Analytics log source to use for parsing and processing EKS Control Plane Audit Logs.
            ociLALogSourceName: "Kubernetes Audit Logs"
            #metadata:
               #"Client Host Region": "America"
               #"Environment": "Production"
               #"Third Key": "Third Value"
            #ociLALogGroupID:
            #worker:

         authenticator:
            cwLogStreamName: "authenticator"
            sqsQueue: "authenticator"
            # S3 object key
            objectKey: .*?authenticator
            # Logging Analytics log source to use for parsing and processing EKS Control Plane Authenticator Logs.
            ociLALogSourceName: "AWS EKS Authenticator Logs"
            multilineStartRegExp: /^time=/
            #metadata:
               #"Client Host Region": "America"
               #"Environment": "Production"
               #"Third Key": "Third Value"
            #ociLALogGroupID:
            #worker:

         kubecontrollermanager:
            cwLogStreamName: "kube-controller-manager"
            sqsQueue: "kube-controller-manager"
            # S3 object key
            objectKey: .*?kube-controller-manager
            # Logging Analytics log source to use for parsing and processing EKS Control Plane Kube Controller Manager Logs.
            ociLALogSourceName: "Kubernetes Controller Manager Logs"
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/
            #metadata:
               #"Client Host Region": "America"
               #"Environment": "Production"
               #"Third Key": "Third Value"
            #ociLALogGroupID:
            #worker:

         cloudcontrollermanager:
            cwLogStreamName: "cloud-controller-manager"
            sqsQueue: "cloud-controller-manager"
            # S3 object key
            objectKey: .*?cloud-controller-manager
            # Logging Analytics log source to use for parsing and processing EKS Control Plane Cloud Controller Manager Logs.
            ociLALogSourceName: "Cloud Controller Manager Logs"
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/
            #metadata:
               #"Client Host Region": "America"
               #"Environment": "Production"
               #"Third Key": "Third Value"
            #ociLALogGroupID:
            #worker:

         scheduler:
            cwLogStreamName: "kube-scheduler"
            sqsQueue: "scheduler"
            # S3 object key
            objectKey: .*?kube-scheduler
            # Logging Analytics log source to use for parsing and processing EKS Control Plane Scheduler Logs.
            ociLALogSourceName: "Kubernetes Scheduler Logs"
            multilineStartRegExp: /^\S\d{2}\d{2}\s+[^\:]+:[^\:]+:[^\.]+\.\d{0,3}/
            #metadata:
               #"Client Host Region": "America"
               #"Environment": "Production"
               #"Third Key": "Third Value"
            #ociLALogGroupID:
            #worker:


   # Generic configuration for all container/pod logs
   genericContainerLogs:
      # -- Default Logging Analytics log source to use for parsing and processing the logs: Kubernetes Container Generic Logs.
      ociLALogSourceName: "Kubernetes Container Generic Logs"
      path: /var/log/containers/*.log
      # -- List of log paths to exclude that are already part of other specific configurations defined (like Kube Proxy, Kube Flannel)
      # If you want to create a custom configuration for any of the container logs using the customLogs section, then exclude the corresponding log path here.
      exclude_path:
         - '"/var/log/containers/kube-proxy-*.log"'
         - '"/var/log/containers/kube-flannel-*.log"'
         - '"/var/log/containers/kube-dns-autoscaler-*.log"'
         - '"/var/log/containers/coredns-*.log"'
         - '"/var/log/containers/csi-oci-node-*.log"'
         - '"/var/log/containers/proxymux-client-*.log"'
         - '"/var/log/containers/cluster-autoscaler-*.log"'
         - '"/var/log/containers/ebs-csi-node-*.log"'
         - '"/var/log/containers/ebs-csi-controller-*.log"'
         - '"/var/log/containers/kube-apiserver-*.log"'
         - '"/var/log/containers/etcd-*.log"'
         - '"/var/log/containers/kube-controller-manager-*.log"'
         - '"/var/log/containers/kube-scheduler-*.log"'
      # Worker number in case of multi process workers enabled. If not set when multi process workers enabled, then it defaults to 0.
      #worker: 1
      # -- To set timezone override for genericContainerLogs (applies only to log records without explicit timezone identifier in the record itself)
      #timezone:

   # -- Configuration for any custom logs which are not part of the default configuration defined in this file.
   # All the pod/container logs will be collected as per "genericContainerLogs" section.
   # Use this section to create a custom configuration for any of the container logs.
   # Also, you can use this section to define configuration for any other log path existing on a Kubernetes worker node
   customLogs:
      #  A unique identifier to represent the configuration for a single log path
      #custom-id1:
         #path: /var/log/containers/custom*.log
         # Logging Analytics log source to use for parsing and processing the logs:
         #ociLALogSourceName: "Custom1 Logs"
         # The regular expression pattern for the starting line in case of multi-line logs.
         #multilineStartRegExp:
         # Set isContainerLog to false if the log is not a container log (/var/log/containers/*.log). Default value is true.
         #isContainerLog: true
         # Setting the following properties will override the default/generic configuration and applies to all Kubernetes system logs
         #ociLALogGroupID:
         #metadata:
            #"Client Host Region": "America"
            #"Environment": "Production"
            #"Third Key": "Third Value"
         #encoding:
         # Worker number in case of multi process workers enabled. If not set when multi process workers enabled, then it defaults to 0.
         #worker:
         # -- To set timezone override for "custom-id1" (applies only to log records without explicit timezone identifier in the record itself)
         #timezone:
      #custom-id2:
         #path: /var/log/custom/*.log
         # Logging Analytics log source to use for parsing and processing the logs:
         #ociLALogSourceName: "Custom2 Logs"
         # The regular expression pattern for the starting line in case of multi-line logs.
         #multilineStartRegExp:
         # Set isContainerLog to false if the log is not a container log (/var/log/containers/*.log). Default value is true.
         #isContainerLog: false

   #  -- Alternative approach to define the configuration for any custom logs which are not part of the default configuration defined in this file.
   # Provide the Fluentd configuration with the source and filter sections for your custom logs in this section. Exclude the match section. It would be used without any modification.
   # Notes:
      # Ensure that @id in the source section is unique and does not collide with any default configuration defined in this file
      # Tag must start with "oci." and must be unique.
      # In case of container log (/var/log/containers/*.log), exclude the corresponding log path in "genericContainerLogs" section.
   customFluentdConf: |

   # TODO: Should I get rid of following config section: kubernetesObjects
   # -- Configuration for collecting Kubernetes Object information.
   # Supported objects are Node, Pod, Namespace, Event, DaemonSet, ReplicaSet, Deployment, StatefulSet, Job, CronJob
   kubernetesObjects:
      #metadata:
         #"Client Host Region": "America"
         #"Environment": "Production"
         #"Third Key": "Third Value"
      #ociLALogGroupID:
      objectsList:
         nodes:
            #api_version: v1
            api_endpoint: ""
         pods:
            api_endpoint: ""
         namespaces:
            api_endpoint: ""
         services:
            api_endpoint: ""
         events:
            api_endpoint: ""
         persistent_volumes:
            api_endpoint: ""
         persistent_volume_claims:
            api_endpoint: ""
         daemon_sets:
            api_endpoint: apis/apps
         replica_sets:
            api_endpoint: apis/apps
         deployments:
            api_endpoint: apis/apps
         stateful_sets:
            api_endpoint: apis/apps
         jobs:
            api_endpoint: apis/batch
         cron_jobs:
            api_endpoint: apis/batch
         endpoint_slices:
            api_endpoint: apis/discovery.k8s.io

# k8sDiscovery: defines properties that affect kubernetes objects discovery
k8sDiscovery:
   # objects: defines inputs for K8s objects discovery
   objects:
      # cronSchedule: cronjob schedule to run object discovery job
      cronSchedule: "*/5 * * * *"
      # restartPolicy: "Never" or "OnFailure"
      # Failed containers will be removed by job in case restartPolicy is not set as Never
      # Ref - https://github.com/kubernetes/kubernetes/issues/74848
      # restartPolicy: "Never"
      # successfulJobsHistoryLimit: specify how many completed jobs should be kept
      successfulJobsHistoryLimit: 3
      # failedJobsHistoryLimit: specify how many failed jobs should be kept
      failedJobsHistoryLimit : 3
      # ociLALogGroupID: OCI LA Loggroup to store the k8s discovery logs
      ociLALogGroupID:
      # discoveryMode: discovery mode to be used - ["infra", "object"]
      discoveryMode: "object"
      # Log format to be used - ["text", "json"]
      log_format: "text"
      # log_level: defines log level for discovery job [trace|debug|info|warn|error|fatal]
      log_level: "info"
      # enable_threading: Defaults to sequential execution when not set (Boolean)
      # When true, must also set thread_count
      enable_threading: false
      # thread_count: Number of parallel threads to be used while making requests to API server
      # Expects enable_threading to be set as true
      thread_count:
      # chunk_limit: Max number of objects that can be fetched via K8s GET API call. Default: 1000
      chunk_limit:
      # collect_warning_events_only: flag to only collect warning event logs
      # Default: All logs are collected and sent to OCI logging analytics for processing
      collect_warning_events_only: false
      # backoffLimit: Specify the number of retries before considering a Job as failed
      # backoffLimit: 1
   infra:
      # Enable Logs collection for OKE's OCI infra components - LB, OKE Cluster control plane, Subnet logs etc
      enable_service_log: false
      # Discovers OKE Node Pools in all compartments of tenant
      # when false, Node Pools present in OKE's compartment are discovered
      probe_all_compartments: false
      # tenancy ocid - must be provided if probe_all_compartments is set as true
      tenancy_ocid:
      # Base64 encoded string of OCI freeform and defined tags
      # expected/example format: {"definedTags":{"Oracle-Recommended-Tags.ResourceOwner":"testOwner","Oracle-Recommended-Tags.ResourceUsage":"testUsage","test.key":"testOwner"},"freeformTags":{"project":"logan","test_number":"1"}}
      oci_tags_base64:
      # This is a helper stack which is used to enable service logs collection by creating a Service connector and Enable Logging for discovered OCI service components
      # [Users are usually not expected to alter this]
      rms_template_base64_encoded: 
      # Maximum amount of time (in seconds) the job should wait while checking the status of stack APPLY operation. Default: 300
      stack_operation_timeout: 300
   # kubernetes: kubernetes cluster related inputs for kubernetes discovery job
   kubeClientOptions:
      # kubernetes_url: Kubernetes API server URL.
      kubernetes_url:
      # client_cert: Path to certificate file for Kubernetes HTTPs/SSL server certificate validation
      client_cert:
      # client_key: Path to key for Kubernetes HTTPs/SSL server certificate validation
      client_key:
      # ca_file: Path to CA file for Kubernetes HTTPs/SSL server certificate validation
      ca_file:
      # verify_ssl: Validate SSL certificates while creating kube clients - [true, false]
      verify_ssl: false
      # bearer_token_file: Path to bearer token file if basic authentication is used
      bearer_token_file:
      # secret_dir: Path to Kubernetes service account token file to access Kubernetes API
      secret_dir:
